<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- 
 Copyright 2013 Robert Stoll <rstoll@tutteli.ch> 
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!--
Following adoptions are apliead to the original file from checkstyle:
- Max file size = 1500
- Disabled "Line has trailing space" due to multiline comment issue
- NewLineAtEndOfFile disabled
- Naming conventions for abstract classes, interfaces etc. added
- Javadoc is optional for methods and variables
- Max line length = 120
- Max method length = 80
- Max parameters per method = 4
- Added OuterTypeNumber check
- AvoidInlineConditionals disabled
-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <module name="JavadocPackage">
        <property name="severity" value="info"/>
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <!-- <module name="NewlineAtEndOfFile"/> -->

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>
    
    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
		<property name="max" value="1500"/>
	</module>
    
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <!--<module name="RegexpSingleline">
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>-->

    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!-- <module name="JavadocMethod"/> -->
        <module name="JavadocType">
			<property name="severity" value="warning"/>
		</module> 
        <!-- <module name="JavadocVariable"/> -->
        <module name="JavadocStyle">
			<property name="severity" value="warning"/>
		</module> 

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName">
		  <property name="format" value="^(([a-z][a-zA-Z0-9]*)|(\$this))$" />
		</module>
		<module name="MemberName">
		  <property name="format" value="^(([a-z][a-zA-Z0-9]*)|(\$this))$" />
		</module>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName">
		  <property name="format" value="^(([a-z][a-zA-Z0-9]*)|(\$this))$" />
		</module>
        <module name="StaticVariableName"/>
        <module name="TypeName">
			<property name="format" value="^I[A-Z][a-zA-Z0-9]*$"/>
			<property name="tokens" value="INTERFACE_DEF"/>
		</module>
		<module name="AbstractClassName" >
			<property name="format" value="^A[A-Z][a-zA-Z0-9]*$"/>
		</module>
		<module name="ClassTypeParameterName" >
			<property name="format" value="^T[A-Z][a-zA-Z0-9]*$"/>
		</module>
		<module name="MethodTypeParameterName" >
			<property name="format" value="^T[A-Z][a-zA-Z0-9]*$"/>
		</module>
		
        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
			<property name="max" value="120"/>
		</module>
        <module name="MethodLength">
		   <property name="max" value="80"/>
		</module>
        <module name="ParameterNumber">
			<property name="max" value="4"/>
			<property name="severity" value="warning"/>
		</module>
		<module name="OuterTypeNumber"/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
			<property name="severity" value="warning"/>
		</module>
        <module name="LeftCurly">
			<property name="option" value="eol"/>
			<property name="tokens" value="CTOR_DEF, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF"/>
		</module>
		<module name="LeftCurly">
			<property name="option" value="nl"/>
			<property name="tokens" value="CLASS_DEF,INTERFACE_DEF"/>
		</module>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- <module name="AvoidInlineConditionals"/> -->
        <module name="DoubleCheckedLocking"/>    <!-- MY FAVOURITE -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField"/>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
		<module name="DefaultComesLast">
			<property name="severity" value="warning"/>
		</module>
		<module name="FallThrough">
			<property name="severity" value="warning"/>
		</module>
        <module name="RedundantThrows">
			<property name="severity" value="warning"/>
		</module>
		<module name="BooleanExpressionComplexity"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality"/>
		
		 <!-- Checks for nesting level -->
		<module name="AvoidNestedBlocks">
			<property name="severity" value="warning"/>
		</module>
		<module name="NestedForDepth">
			<property name="max" value="2"/>
			<property name="severity" value="warning"/>
		</module>
		<module name="NestedIfDepth">
			<property name="max" value="2"/>
			<property name="severity" value="warning"/>
		</module>
		<module name="NestedTryDepth">
			<property name="max" value="2"/>
			<property name="severity" value="warning"/>
		</module>
		
		

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module name="DesignForExtension"/> -->
        <module name="FinalClass">
			<property name="severity" value="info"/>
		</module>		
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier">
			 <property name="protectedAllowed" value="true"/>
		</module>
		<module name="DeclarationOrder"/>
		<module name="InnerTypeLast"/>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
         <!-- <module name="FinalParameters"/> -->
        <module name="TodoComment">
			<property name="format" value="TODO|FIXME|XXX"/>
			<property name="severity" value="info"/>
		</module>
        <module name="UpperEll"/>
		
		<module name="FileContentsHolder"/>

    </module>
	<module name="SuppressionCommentFilter">
		<property name="offCommentFormat" value="CHECKSTYLE\:OFF\:([\w\|]+)"/>
		<property name="onCommentFormat" value="CHECKSTYLE\:ON\:([\w\|]+)"/>
		<property name="checkFormat" value="$1"/>
	</module>
	
	<module name="SuppressionFilter">
		<property name="file" value="${suppressions.xml}"/>
	</module>
	
</module>
